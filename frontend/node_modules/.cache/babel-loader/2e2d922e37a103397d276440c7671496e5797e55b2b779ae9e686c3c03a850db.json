{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-blog\\\\client\\\\src\\\\BlogList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './BlogList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [error, setError] = useState('');\n  const [newComment, setNewComment] = useState({\n    username: '',\n    content: ''\n  });\n  const fetchBlogs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/blogs');\n      setBlogs(response.data);\n    } catch (error) {\n      setError('Error fetching blogs: ' + error.message);\n    }\n  };\n  const handleLike = async id => {\n    try {\n      await axios.post(`http://localhost:5000/api/blogs/${id}/like`);\n      fetchBlogs(); // Refresh the blog list to show updated likes\n    } catch (error) {\n      console.error('Error liking blog:', error);\n    }\n  };\n  const handleCommentSubmit = async id => {\n    try {\n      await axios.post(`http://localhost:5000/api/blogs/${id}/comments`, newComment);\n      setNewComment({\n        username: '',\n        content: ''\n      }); // Reset comment input\n      fetchBlogs(); // Refresh the blog list to show updated comments\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: blog.image,\n        alt: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLike(blog._id),\n        children: [\"Like (\", blog.likes, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), blog.comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comment.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), \": \", comment.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: newComment.username,\n          onChange: e => setNewComment({\n            ...newComment,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Comment\",\n          value: newComment.content,\n          onChange: e => setNewComment({\n            ...newComment,\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentSubmit(blog._id),\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, blog._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogList, \"U9OG5oE1cCZ5ifon2N2HX6WIHn4=\");\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BlogList","_s","blogs","setBlogs","error","setError","newComment","setNewComment","username","content","fetchBlogs","response","get","data","message","handleLike","id","post","console","handleCommentSubmit","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","title","src","image","alt","onClick","_id","likes","comments","comment","index","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/mern-blog/client/src/BlogList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './BlogList.css';\r\n\r\nconst BlogList = () => {\r\n    const [blogs, setBlogs] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [newComment, setNewComment] = useState({ username: '', content: '' });\r\n\r\n    const fetchBlogs = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/api/blogs');\r\n            setBlogs(response.data);\r\n        } catch (error) {\r\n            setError('Error fetching blogs: ' + error.message);\r\n        }\r\n    };\r\n\r\n    const handleLike = async (id) => {\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/blogs/${id}/like`);\r\n            fetchBlogs(); // Refresh the blog list to show updated likes\r\n        } catch (error) {\r\n            console.error('Error liking blog:', error);\r\n        }\r\n    };\r\n\r\n    const handleCommentSubmit = async (id) => {\r\n        try {\r\n            await axios.post(`http://localhost:5000/api/blogs/${id}/comments`, newComment);\r\n            setNewComment({ username: '', content: '' }); // Reset comment input\r\n            fetchBlogs(); // Refresh the blog list to show updated comments\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {error && <div style={{ color: 'red' }}>{error}</div>}\r\n            {blogs.map(blog => (\r\n                <div className=\"blog-post\" key={blog._id}>\r\n                    <h2>{blog.title}</h2>\r\n                    <img src={blog.image} alt={blog.title} />\r\n                    <p>{blog.content}</p>\r\n                    <button onClick={() => handleLike(blog._id)}>Like ({blog.likes})</button>\r\n                    <h4>Comments:</h4>\r\n                    {blog.comments.map((comment, index) => (\r\n                        <div key={index}>\r\n                            <strong>{comment.username}</strong>: {comment.content}\r\n                        </div>\r\n                    ))}\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Your Name\"\r\n                            value={newComment.username}\r\n                            onChange={(e) => setNewComment({ ...newComment, username: e.target.value })}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Your Comment\"\r\n                            value={newComment.content}\r\n                            onChange={(e) => setNewComment({ ...newComment, content: e.target.value })}\r\n                        />\r\n                        <button onClick={() => handleCommentSubmit(blog._id)}>Submit Comment</button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC;IAAEY,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAE3E,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC;MACnET,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZC,QAAQ,CAAC,wBAAwB,GAAGD,KAAK,CAACU,OAAO,CAAC;IACtD;EACJ,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACA,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmCD,EAAE,OAAO,CAAC;MAC9DN,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZc,OAAO,CAACd,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMe,mBAAmB,GAAG,MAAOH,EAAE,IAAK;IACtC,IAAI;MACA,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mCAAmCD,EAAE,WAAW,EAAEV,UAAU,CAAC;MAC9EC,aAAa,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;MAC9CC,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZc,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZe,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrBjB,KAAK,iBAAIL,OAAA;MAAKuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEjB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACpDzB,KAAK,CAAC0B,GAAG,CAACC,IAAI,iBACX9B,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBtB,OAAA;QAAAsB,QAAA,EAAKQ,IAAI,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrB5B,OAAA;QAAKgC,GAAG,EAAEF,IAAI,CAACG,KAAM;QAACC,GAAG,EAAEJ,IAAI,CAACC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC5B,OAAA;QAAAsB,QAAA,EAAIQ,IAAI,CAACpB;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB5B,OAAA;QAAQmC,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACc,IAAI,CAACM,GAAG,CAAE;QAAAd,QAAA,GAAC,QAAM,EAACQ,IAAI,CAACO,KAAK,EAAC,GAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzE5B,OAAA;QAAAsB,QAAA,EAAI;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBE,IAAI,CAACQ,QAAQ,CAACT,GAAG,CAAC,CAACU,OAAO,EAAEC,KAAK,kBAC9BxC,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAAsB,QAAA,EAASiB,OAAO,CAAC9B;QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACW,OAAO,CAAC7B,OAAO;MAAA,GAD/C8B,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR,CAAC,eACF5B,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UACIyC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,WAAW;UACvBC,KAAK,EAAEpC,UAAU,CAACE,QAAS;UAC3BmC,QAAQ,EAAGC,CAAC,IAAKrC,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEE,QAAQ,EAAEoC,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC,eACF5B,OAAA;UACIyC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BC,KAAK,EAAEpC,UAAU,CAACG,OAAQ;UAC1BkC,QAAQ,EAAGC,CAAC,IAAKrC,aAAa,CAAC;YAAE,GAAGD,UAAU;YAAEG,OAAO,EAAEmC,CAAC,CAACC,MAAM,CAACH;UAAM,CAAC;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC,eACF5B,OAAA;UAAQmC,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACU,IAAI,CAACM,GAAG,CAAE;UAAAd,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA,GAzBsBE,IAAI,CAACM,GAAG;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BnC,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAvEID,QAAQ;AAAA8C,EAAA,GAAR9C,QAAQ;AAyEd,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}