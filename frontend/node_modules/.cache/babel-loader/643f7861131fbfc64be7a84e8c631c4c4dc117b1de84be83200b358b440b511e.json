{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-blog\\\\client\\\\src\\\\BlogList.js\",\n  _s = $RefreshSig$();\n// client/src/BlogList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/blogs');\n        setBlogs(response.data);\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), blog.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${blog.image}`,\n          alt: blog.title,\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogList, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","BlogList","_s","blogs","setBlogs","fetchBlogs","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","index","title","content","image","src","alt","style","width","_c","$RefreshReg$"],"sources":["D:/mern-blog/client/src/BlogList.js"],"sourcesContent":["// client/src/BlogList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BlogList = () => {\r\n    const [blogs, setBlogs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchBlogs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/blogs');\r\n                setBlogs(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching blogs:', error);\r\n            }\r\n        };\r\n        fetchBlogs();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog Posts</h1>\r\n            <ul>\r\n                {blogs.map((blog, index) => (\r\n                    <li key={index}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>{blog.content}</p>\r\n                        {blog.image && <img src={`http://localhost:5000/${blog.image}`} alt={blog.title} style={{ width: '200px' }} />}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA;MAAAW,QAAA,EACKR,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBlB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAKM,IAAI,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAIM,IAAI,CAACG;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBE,IAAI,CAACI,KAAK,iBAAIrB,OAAA;UAAKsB,GAAG,EAAE,yBAAyBL,IAAI,CAACI,KAAK,EAAG;UAACE,GAAG,EAAEN,IAAI,CAACE,KAAM;UAACK,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHzGG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CA7BID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}